---
format_version: 10
pipelines:
  selenium_tests:
    group: cicd_task_group
    lock_behaviour: unlockWhenFinished
    label_template: "${git_selenium_tests}"
    materials:
      git_selenium_tests:
        git: https://github.com/rolandsjlociks/cicd_task.git
        shallow_clone: true
        auto_update: true
    stages: 
      - build:
          jobs:
            build:
              tasks:
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - echo "Building stuff"
      - deploy-staging:
          environment_variables:
            ENV_NAME: staging
          jobs:
            deploy:
              tasks:
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - echo "Deploying on ${ENV_NAME}"
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - bash send_notification.sh "${ENV_NAME} deployment‚Äù 0
      - test-staging:
          environment_variables:
            ENV_NAME: staging
          jobs:
            deploy:
              tasks:
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - echo "Testing on ${ENV_NAME}"
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - docker compose up
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - docker compose down
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - docker rm chrome firefox mvn selenium-hub
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - bash send_notification.sh "${ENV_NAME} testing" 0
                

      - deploy-prod:
          environment_variables:
            ENV_NAME: prod
          jobs:
            deploy:
              tasks:
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - echo "Deploying on ${ENV_NAME}"
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - bash send_notification.sh "${ENV_NAME} testing" 0
    
      - test-prod:
          environment_variables:
            ENV_NAME: prod
          jobs:
            deploy:
              tasks:
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - echo "Testing on ${ENV_NAME}"
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - bash send_notification.sh "${ENV_NAME} testing" 0




